<?xml version="1.0" encoding="UTF-8"?>
<infinispan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:infinispan:config:6.1 http://www.infinispan.org/schemas/infinispan-config-6.1.xsd"
	xmlns="urn:infinispan:config:6.1">

	<global>
	    <globalJmxStatistics allowDuplicateDomains="true" enabled="true" cacheManagerName="RDSCacheManager"/>
		<transport clusterName="clustered" nodeName="RDS-EAP-JDG-1">
			<properties>
				<property name="configurationFile" value="jgroups-udp.xml" />
			</properties>
		</transport>
		<!--security>
			<authorization>
				<custom-role-mapper class="org.jboss.as.quickstarts.datagrid.securecache.JAASPrincipalRoleMapper"/>
				<role name="admin" permissions="ALL" />
				<role name="reader" permissions="READ BULK_READ"/>
				<role name="writer" permissions="WRITE" />
				<role name="supervisor" permissions="READ WRITE EXEC" />
			</authorization>
		</security-->		
	</global>
	<default>
		<jmxStatistics enabled="true"/>
		<indexing enabled="true" indexLocalOnly="true">
			<properties>
				<property name="hibernate.search.default.directory_provider" value="ram" />
				<property name="lucene_version" value="LUCENE_CURRENT" />
			</properties>
		</indexing>		
		<!-- writeSkewCheck:  This setting is only applicable in the case of REPEATABLE_READ. When write skew check is set to false, if the writer at commit time discovers that the working entry and the underlying entry have different versions, the working entry will overwrite the underlying entry. If true, such version conflict - known as a write-skew - will throw an Exception. Defaults to false. -->
		<locking isolationLevel="REPEATABLE_READ"
		         concurrencyLevel="32"
		         lockAcquisitionTimeout="10000"
		         useLockStriping="false"
		         writeSkewCheck="false" 
		         supportsConcurrentUpdates="true"
		         />
		<eviction strategy="NONE" maxEntries="-1"/>
		<expiration lifespan="-1" maxIdle="-1" reaperEnabled="faise" wakeUpInterval="-1"/>
		
		<!-- Transactions 
			transactionManagerLookupClass="org.infinispan.transaction.lookup.GenericTransactionManagerLookup.GenericTransactionManagerLookup"
		-->
		<transaction cacheStopTimeout="30000"
		             completedTxTimeout="150000"
		             reaperWakeUpInterval="1000"
		             eagerLockSingleNode="false"
		             syncCommitPhase="true"
		             syncRollbackPhase="false"
		             useEagerLocking="false"
		             useSynchronization="false"
		             lockingMode="PESSIMISTIC"
		             transactionMode="TRANSACTIONAL"
		             autoCommit="true"
		             use1PcForAutoCommitTransactions="false">
		    <recovery enabled="false"></recovery>
		</transaction>
		<!-- Transactions required for batching -->
		<invocationBatching enabled="true"/>
		
			<!-- security >
				<authorization enabled="true" roles="admin reader writer" />
			</security> -->				
	</default>
	<!-- A synchronous distributed cache with NO CacheStore & No entries kept in this node hash capacityFactor="0" -->
	<namedCache name="RDS_SYNC_DIST">
		<clustering mode="dist">
		    <hash capacityFactor="0"/>
			<sync />
			<stateTransfer awaitInitialTransfer="true" fetchInMemoryState="true" />
		</clustering>
		<compatibility enabled="true"/>
		<!-- jmxStatistics enabled="true"/> -->	
	</namedCache>
	
	<!--An asynchronous distributed cache with NO CacheStore & No entries kept in this node hash capacityFactor="0" -->
	<namedCache name="RDS_ASYNC_DIST">
		<clustering mode="dist">
		    <hash capacityFactor="0"/>
			<async />
			<stateTransfer awaitInitialTransfer="true" fetchInMemoryState="true" />
		</clustering>
		<compatibility enabled="true"/>
		<!-- jmxStatistics enabled="true"/> -->
	</namedCache>	

	<!--A synchronous distributed cache with synchronous (WRITE-THROUGH) DB CacheStore & No entries kept in this node hash capacityFactor="0" -->
	<namedCache name="RDS_ALL_SYNC_DIST">
		<clustering mode="dist">
		    <hash capacityFactor="0"/>
			<sync />
			<stateTransfer awaitInitialTransfer="true" fetchInMemoryState="true" />
		</clustering>
		<compatibility enabled="true"/>
		<!-- jmxStatistics enabled="true"/> -->

		<!--  Cachstore(s) -->
		<!--persistence passivation="false"-->
          <!-- leveldbStore location="/tmp/leveldb/data" expiredLocation="/tmp/leveldb/expired/data" shared="false" preload="true"-->
          <!--singleFile fetchPersistentState="true" ignoreModifications="false" shared="false" preload="true" purgeOnStartup="false" location="/tmp/singlefile/data">
          <async enabled="false"/--> <!-- WRITE THROUGH >
          </singleFile>
		</persistence-->
		
	</namedCache>

	<!--An asynchronous distributed cache with asynchronous (WRITE-BEHIND) DB CacheStore & No entries kept in this node hash capacityFactor="0" -->
	<namedCache name="RDS_ALL_ASYNC_DIST">
		<clustering mode="dist">
		    <!-- hash capacityFactor="0"/> -->
			<async/>
			<stateTransfer awaitInitialTransfer="true" fetchInMemoryState="true" />
		</clustering>
		<compatibility enabled="true"/>
		<!-- jmxStatistics enabled="true"/> -->

		<!--  Cachstore(s) -->
		<!--persistence passivation="false"-->
          <!-- leveldbStore location="/tmp/leveldb/data" expiredLocation="/tmp/leveldb/expired/data" shared="false" preload="true"-->
          <!--singleFile fetchPersistentState="true" ignoreModifications="false" shared="false" preload="true" purgeOnStartup="false" location="/tmp/singlefile/data">
          <async enabled="true"/-->  <!-- WRITE BEHIND -->
          <!--/singleFile>
		</persistence-->
		
	</namedCache>
		
</infinispan>